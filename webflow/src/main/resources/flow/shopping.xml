<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow
                          http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">

    <var name="mycart" class="com.bing.webflow.product.Cart" />
    <on-start>
        <set name="conversationScope.cart" value="mycart"></set>
    </on-start>
<!-- view-state中的view对应jsp文件夹中的jsp页面，on是触发事件，to对应state id -->
    <view-state id="viewCart" view="viewCart">
          <on-render>
        <!-- 要在 viewCart 页面中显示商品，只需在 view-state 元素的 on-render 切入点调用 productService 的
         getProducts 方法，并将所得结果保存到 viewScope 中即可 -->
            <evaluate expression="productService.getProducts()" result="viewScope.products" />
        </on-render>
        <!-- 提交购物车 -->
        <transition on="submit" to="viewOrder"/>
        <!-- 添加商品 -->
        <transition on="addToCart" to="addProductToCart" />
    </view-state>
    <subflow-state id="addProductToCart" subflow="addToCart">
        <transition on="productAdded" to="viewCart" />
    </subflow-state>
    <!-- 订单列表 -->
    <view-state id="viewOrder" view="viewOrder">
        <transition on="confirm" to="orderConfirmed">
        </transition>
    </view-state>
    <view-state id="orderConfirmed" view="orderConfirmed">
        <transition on="returnToIndex" to="returnToIndex">
        </transition>
         <transition on="cancel" to="bookingCancelled" />
    </view-state>
    <!-- externalRedirect 用在 view 名字中，表示所指向的资源是在 flow 的外部， servletRelative 则表明所指向资源的路径起始部分与 flow 所在 servlet 相同。 -->
    <!-- <end-state id="returnToIndex" view="externalRedirect:servletRelative:/index.jsp">
    </end-state> -->
     <end-state id="returnToIndex" view="externalRedirect:/index.jsp">
    </end-state>
     <end-state id="bookingCancelled" view="externalRedirect:servletRelative:/cancel.jsp" />
</flow>